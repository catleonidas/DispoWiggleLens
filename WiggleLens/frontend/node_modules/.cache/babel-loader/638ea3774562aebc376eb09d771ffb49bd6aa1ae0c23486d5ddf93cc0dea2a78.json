{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leonidas\\\\Desktop\\\\Coding\\\\DispoStudio\\\\WiggleLens\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [fullImagePreview, setFullImagePreview] = useState(null);\n  const [imagePreviews, setImagePreviews] = useState([]);\n  const [imageSize, setImageSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const [focalPoints, setFocalPoints] = useState([null, null, null]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [isSplit, setIsSplit] = useState(false);\n  const [currentSection, setCurrentSection] = useState(0);\n  const [loadedImage, setLoadedImage] = useState(null);\n  const handleImageUpload = async e => {\n    const file = e.target.files[0];\n    setImage(file);\n    setFocalPoints([null, null, null]);\n    setIsSplit(false);\n\n    // Create full image preview and store the Image object\n    const img = new Image();\n    img.onload = () => {\n      setImageSize({\n        width: img.width,\n        height: img.height\n      });\n      setFullImagePreview(img.src);\n      // Store the loaded image for later use\n      setLoadedImage(img);\n    };\n    img.src = URL.createObjectURL(file);\n  };\n  const handleSplitImage = () => {\n    // Use the already loaded image\n    const img = loadedImage;\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    canvas.width = img.width;\n    canvas.height = img.height;\n    ctx.drawImage(img, 0, 0);\n    const sectionWidth = Math.floor(img.width / 3);\n    const previews = [];\n    for (let i = 0; i < 3; i++) {\n      const sectionCanvas = document.createElement('canvas');\n      sectionCanvas.width = sectionWidth;\n      sectionCanvas.height = img.height;\n      const sectionCtx = sectionCanvas.getContext('2d');\n      sectionCtx.drawImage(img, i * sectionWidth, 0, sectionWidth, img.height, 0, 0, sectionWidth, img.height);\n      previews.push(sectionCanvas.toDataURL());\n    }\n    setImagePreviews(previews);\n    setIsSplit(true);\n  };\n  const handleSectionClick = (sectionIndex, e) => {\n    if (sectionIndex !== currentSection) return;\n    const rect = e.target.getBoundingClientRect();\n    const image = e.target;\n\n    // Get the actual rendered size of the image\n    const renderedWidth = image.width;\n    const renderedHeight = image.height;\n\n    // Calculate the scaling factor between rendered size and natural size\n    const scaleX = image.naturalWidth / renderedWidth;\n    const scaleY = image.naturalHeight / renderedHeight;\n\n    // Get click position relative to the rendered image\n    // Account for potential padding due to object-fit: contain\n    const imageAspect = image.naturalWidth / image.naturalHeight;\n    const containerAspect = renderedWidth / renderedHeight;\n    let x = e.clientX - rect.left;\n    let y = e.clientY - rect.top;\n\n    // Adjust coordinates if image is letterboxed due to object-fit: contain\n    if (imageAspect > containerAspect) {\n      // Image is wider than container - has vertical padding\n      const actualHeight = renderedWidth / imageAspect;\n      const padding = (renderedHeight - actualHeight) / 2;\n      y = y - padding;\n      // Clamp y to actual image bounds\n      y = Math.max(0, Math.min(y, actualHeight));\n    } else {\n      // Image is taller than container - has horizontal padding\n      const actualWidth = renderedHeight * imageAspect;\n      const padding = (renderedWidth - actualWidth) / 2;\n      x = x - padding;\n      // Clamp x to actual image bounds\n      x = Math.max(0, Math.min(x, actualWidth));\n    }\n\n    // Scale to original image coordinates\n    const originalX = Math.round(x * scaleX);\n    const originalY = Math.round(y * scaleY);\n\n    // Add the section offset\n    const sectionWidth = imageSize.width / 3;\n    const adjustedX = originalX + sectionIndex * sectionWidth;\n\n    // Clamp values to ensure they stay within the section bounds\n    const finalX = Math.max(sectionIndex * sectionWidth, Math.min(adjustedX, (sectionIndex + 1) * sectionWidth - 1));\n    const finalY = Math.max(0, Math.min(originalY, imageSize.height - 1));\n    const newFocalPoints = [...focalPoints];\n    newFocalPoints[sectionIndex] = {\n      x: finalX,\n      y: finalY\n    };\n    setFocalPoints(newFocalPoints);\n    setCurrentSection(currentSection + 1);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Check if all focal points are set\n    if (focalPoints.some(fp => fp === null)) {\n      setError('Please set focal points for all sections by clicking on them');\n      return;\n    }\n    setError(null);\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('image', image);\n      formData.append('focalPoints', JSON.stringify(focalPoints));\n      const response = await fetch('http://localhost:5000/api/process_image', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to process image');\n      }\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'wiggle.mp4';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleBack = () => {\n    if (isSplit) {\n      setIsSplit(false);\n      setFocalPoints([null, null, null]);\n      setCurrentSection(0);\n    } else if (image) {\n      setImage(null);\n      setFullImagePreview(null);\n      setImagePreviews([]);\n      setFocalPoints([null, null, null]);\n      setCurrentSection(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [(image || isSplit) && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-arrow\",\n      onClick: handleBack,\n      title: \"Go back\",\n      children: \"\\u2190\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"WiggleLens Image Processor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"upload-form\",\n      children: [!image &&\n      /*#__PURE__*/\n      // Only show upload container if no image is selected\n      _jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"upload-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleImageUpload,\n            required: true,\n            className: \"upload-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), \"Upload Image (6024x4024)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), fullImagePreview && !isSplit && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"full-image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: fullImagePreview,\n          alt: \"Full uploaded image\",\n          className: \"full-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleSplitImage,\n          className: \"split-button\",\n          children: \"Split Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), isSplit && imagePreviews.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sections-container\",\n          children: imagePreviews.map((preview, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `section-card ${index === currentSection ? 'active' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"section-title\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section-image-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: preview,\n                alt: `Section ${index + 1}`,\n                onClick: e => handleSectionClick(index, e),\n                className: `section-image ${index === currentSection ? 'active' : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this), focalPoints[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"focal-point\",\n                style: {\n                  left: `${focalPoints[index].x % (imageSize.width / 3) / (imageSize.width / 3) * 100}%`,\n                  top: `${focalPoints[index].y / imageSize.height * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this), focalPoints[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coordinates-text\",\n              children: `Focal point: (${Math.round(focalPoints[index].x)}, ${Math.round(focalPoints[index].y)})`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"previews-title\",\n          children: \"Click on each section to set focal points:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), isSplit && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !image || loading || focalPoints.some(fp => fp === null),\n        className: \"submit-button\",\n        children: loading ? 'Processing...' : 'Create Wiggle'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"N0nGsEG6aXh2zdEZ3V20a4cEdUs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","image","setImage","fullImagePreview","setFullImagePreview","imagePreviews","setImagePreviews","imageSize","setImageSize","width","height","focalPoints","setFocalPoints","error","setError","loading","setLoading","isSplit","setIsSplit","currentSection","setCurrentSection","loadedImage","setLoadedImage","handleImageUpload","e","file","target","files","img","Image","onload","src","URL","createObjectURL","handleSplitImage","canvas","document","createElement","ctx","getContext","drawImage","sectionWidth","Math","floor","previews","i","sectionCanvas","sectionCtx","push","toDataURL","handleSectionClick","sectionIndex","rect","getBoundingClientRect","renderedWidth","renderedHeight","scaleX","naturalWidth","scaleY","naturalHeight","imageAspect","containerAspect","x","clientX","left","y","clientY","top","actualHeight","padding","max","min","actualWidth","originalX","round","originalY","adjustedX","finalX","finalY","newFocalPoints","handleSubmit","preventDefault","some","fp","formData","FormData","append","JSON","stringify","response","fetch","method","body","ok","errorData","json","Error","blob","url","window","a","href","download","appendChild","click","removeChild","revokeObjectURL","err","message","handleBack","className","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","required","alt","length","map","preview","index","style","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Leonidas/Desktop/Coding/DispoStudio/WiggleLens/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [image, setImage] = useState(null);\r\n  const [fullImagePreview, setFullImagePreview] = useState(null);\r\n  const [imagePreviews, setImagePreviews] = useState([]);\r\n  const [imageSize, setImageSize] = useState({ width: 0, height: 0 });\r\n  const [focalPoints, setFocalPoints] = useState([null, null, null]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [isSplit, setIsSplit] = useState(false);\r\n  const [currentSection, setCurrentSection] = useState(0);\r\n  const [loadedImage, setLoadedImage] = useState(null);\r\n\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    setImage(file);\r\n    setFocalPoints([null, null, null]);\r\n    setIsSplit(false);\r\n\r\n    // Create full image preview and store the Image object\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      setImageSize({ width: img.width, height: img.height });\r\n      setFullImagePreview(img.src);\r\n      // Store the loaded image for later use\r\n      setLoadedImage(img);\r\n    };\r\n    img.src = URL.createObjectURL(file);\r\n  };\r\n\r\n  const handleSplitImage = () => {\r\n    // Use the already loaded image\r\n    const img = loadedImage;\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    \r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n    ctx.drawImage(img, 0, 0);\r\n    \r\n    const sectionWidth = Math.floor(img.width / 3);\r\n    \r\n    const previews = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      const sectionCanvas = document.createElement('canvas');\r\n      sectionCanvas.width = sectionWidth;\r\n      sectionCanvas.height = img.height;\r\n      const sectionCtx = sectionCanvas.getContext('2d');\r\n      \r\n      sectionCtx.drawImage(\r\n        img,\r\n        i * sectionWidth, 0, sectionWidth, img.height,\r\n        0, 0, sectionWidth, img.height\r\n      );\r\n      \r\n      previews.push(sectionCanvas.toDataURL());\r\n    }\r\n    \r\n    setImagePreviews(previews);\r\n    setIsSplit(true);\r\n  };\r\n\r\n  const handleSectionClick = (sectionIndex, e) => {\r\n    if (sectionIndex !== currentSection) return;\r\n\r\n    const rect = e.target.getBoundingClientRect();\r\n    const image = e.target;\r\n    \r\n    // Get the actual rendered size of the image\r\n    const renderedWidth = image.width;\r\n    const renderedHeight = image.height;\r\n    \r\n    // Calculate the scaling factor between rendered size and natural size\r\n    const scaleX = image.naturalWidth / renderedWidth;\r\n    const scaleY = image.naturalHeight / renderedHeight;\r\n    \r\n    // Get click position relative to the rendered image\r\n    // Account for potential padding due to object-fit: contain\r\n    const imageAspect = image.naturalWidth / image.naturalHeight;\r\n    const containerAspect = renderedWidth / renderedHeight;\r\n    \r\n    let x = e.clientX - rect.left;\r\n    let y = e.clientY - rect.top;\r\n    \r\n    // Adjust coordinates if image is letterboxed due to object-fit: contain\r\n    if (imageAspect > containerAspect) {\r\n      // Image is wider than container - has vertical padding\r\n      const actualHeight = renderedWidth / imageAspect;\r\n      const padding = (renderedHeight - actualHeight) / 2;\r\n      y = y - padding;\r\n      // Clamp y to actual image bounds\r\n      y = Math.max(0, Math.min(y, actualHeight));\r\n    } else {\r\n      // Image is taller than container - has horizontal padding\r\n      const actualWidth = renderedHeight * imageAspect;\r\n      const padding = (renderedWidth - actualWidth) / 2;\r\n      x = x - padding;\r\n      // Clamp x to actual image bounds\r\n      x = Math.max(0, Math.min(x, actualWidth));\r\n    }\r\n    \r\n    // Scale to original image coordinates\r\n    const originalX = Math.round(x * scaleX);\r\n    const originalY = Math.round(y * scaleY);\r\n    \r\n    // Add the section offset\r\n    const sectionWidth = imageSize.width / 3;\r\n    const adjustedX = originalX + (sectionIndex * sectionWidth);\r\n    \r\n    // Clamp values to ensure they stay within the section bounds\r\n    const finalX = Math.max(\r\n      sectionIndex * sectionWidth,\r\n      Math.min(adjustedX, (sectionIndex + 1) * sectionWidth - 1)\r\n    );\r\n    const finalY = Math.max(0, Math.min(originalY, imageSize.height - 1));\r\n    \r\n    const newFocalPoints = [...focalPoints];\r\n    newFocalPoints[sectionIndex] = { x: finalX, y: finalY };\r\n    setFocalPoints(newFocalPoints);\r\n    setCurrentSection(currentSection + 1);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Check if all focal points are set\r\n    if (focalPoints.some(fp => fp === null)) {\r\n      setError('Please set focal points for all sections by clicking on them');\r\n      return;\r\n    }\r\n\r\n    setError(null);\r\n    setLoading(true);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('image', image);\r\n      formData.append('focalPoints', JSON.stringify(focalPoints));\r\n\r\n      const response = await fetch('http://localhost:5000/api/process_image', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to process image');\r\n      }\r\n\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = 'wiggle.mp4';\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      window.URL.revokeObjectURL(url);\r\n\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    if (isSplit) {\r\n      setIsSplit(false);\r\n      setFocalPoints([null, null, null]);\r\n      setCurrentSection(0);\r\n    } else if (image) {\r\n      setImage(null);\r\n      setFullImagePreview(null);\r\n      setImagePreviews([]);\r\n      setFocalPoints([null, null, null]);\r\n      setCurrentSection(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {(image || isSplit) && (\r\n        <button \r\n          className=\"back-arrow\" \r\n          onClick={handleBack}\r\n          title=\"Go back\"\r\n        >\r\n          ←\r\n        </button>\r\n      )}\r\n\r\n      <h1 className=\"title\">WiggleLens Image Processor</h1>\r\n      \r\n      <form onSubmit={handleSubmit} className=\"upload-form\">\r\n        {!image && (  // Only show upload container if no image is selected\r\n          <div className=\"upload-container\">\r\n            <label className=\"upload-label\">\r\n              <input \r\n                type=\"file\" \r\n                accept=\"image/*\" \r\n                onChange={handleImageUpload}\r\n                required \r\n                className=\"upload-input\"\r\n              />\r\n              Upload Image (6024x4024)\r\n            </label>\r\n          </div>\r\n        )}\r\n\r\n        {fullImagePreview && !isSplit && (\r\n          <div className=\"full-image-container\">\r\n            <img \r\n              src={fullImagePreview} \r\n              alt=\"Full uploaded image\" \r\n              className=\"full-image\"\r\n            />\r\n            <button \r\n              type=\"button\" \r\n              onClick={handleSplitImage}\r\n              className=\"split-button\"\r\n            >\r\n              Split Image\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {isSplit && imagePreviews.length > 0 && (\r\n          <>\r\n            <div className=\"sections-container\">\r\n              {imagePreviews.map((preview, index) => (\r\n                <div key={index} className={`section-card ${index === currentSection ? 'active' : ''}`}>\r\n                  <h4 className=\"section-title\">{index + 1}</h4>\r\n                  <div className=\"section-image-container\">\r\n                    <img \r\n                      src={preview} \r\n                      alt={`Section ${index + 1}`} \r\n                      onClick={(e) => handleSectionClick(index, e)}\r\n                      className={`section-image ${index === currentSection ? 'active' : ''}`}\r\n                    />\r\n                    {focalPoints[index] && (\r\n                      <div \r\n                        className=\"focal-point\"\r\n                        style={{\r\n                          left: `${((focalPoints[index].x % (imageSize.width / 3)) / (imageSize.width / 3)) * 100}%`,\r\n                          top: `${(focalPoints[index].y / imageSize.height) * 100}%`,\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  {focalPoints[index] && (\r\n                    <div className=\"coordinates-text\">\r\n                      {`Focal point: (${Math.round(focalPoints[index].x)}, ${Math.round(focalPoints[index].y)})`}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <h3 className=\"previews-title\">Click on each section to set focal points:</h3>\r\n          </>\r\n        )}\r\n\r\n        {isSplit && (\r\n          <button \r\n            type=\"submit\" \r\n            disabled={!image || loading || focalPoints.some(fp => fp === null)}\r\n            className=\"submit-button\"\r\n          >\r\n            {loading ? 'Processing...' : 'Create Wiggle'}\r\n          </button>\r\n        )}\r\n      </form>\r\n\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          Error: {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}