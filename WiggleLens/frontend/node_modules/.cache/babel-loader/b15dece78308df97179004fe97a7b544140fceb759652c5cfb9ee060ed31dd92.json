{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leonidas\\\\Desktop\\\\Coding\\\\DispoStudio\\\\WiggleLens\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [fullImagePreview, setFullImagePreview] = useState(null);\n  const [imagePreviews, setImagePreviews] = useState([]);\n  const [imageSize, setImageSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const [focalPoints, setFocalPoints] = useState([null, null, null]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [isSplit, setIsSplit] = useState(false);\n  const [loadedImage, setLoadedImage] = useState(null);\n  const [splitLoading, setSplitLoading] = useState(false);\n  const [autoDetectLoading, setAutoDetectLoading] = useState(false);\n  const handleImageUpload = async e => {\n    const file = e.target.files[0];\n\n    // Create temporary image to check dimensions\n    const img = new Image();\n    img.onload = () => {\n      // Check for exact 6000x4000 dimensions\n      if (img.width !== 6000 || img.height !== 4000) {\n        setError('Please upload an image that is exactly 6000x4000 pixels');\n        // Reset file input\n        e.target.value = '';\n        return;\n      }\n\n      // If dimensions are correct, proceed with upload\n      setImage(file);\n      setFocalPoints([null, null, null]);\n      setIsSplit(false);\n      setError(null); // Clear any previous errors\n\n      setImageSize({\n        width: img.width,\n        height: img.height\n      });\n      setFullImagePreview(img.src);\n      setLoadedImage(img);\n    };\n    img.onerror = () => {\n      setError('Failed to load image');\n      e.target.value = '';\n    };\n    img.src = URL.createObjectURL(file);\n  };\n  const handleSplitImage = async () => {\n    // Reset focal points every time user re-splits the image.\n    setFocalPoints([null, null, null]);\n    setSplitLoading(true);\n    try {\n      const img = loadedImage;\n      const sectionWidth = Math.floor(img.width / 3);\n\n      // Create sections in parallel\n      const sectionPromises = [0, 1, 2].map(async i => {\n        const canvas = new OffscreenCanvas(sectionWidth, img.height);\n        const ctx = canvas.getContext('2d');\n\n        // Draw section\n        ctx.drawImage(img, i * sectionWidth, 0, sectionWidth, img.height, 0, 0, sectionWidth, img.height);\n\n        // Convert to blob and then to data URL\n        const blob = await canvas.convertToBlob({\n          type: 'image/jpeg',\n          quality: 0.8\n        });\n        return URL.createObjectURL(blob);\n      });\n      const previews = await Promise.all(sectionPromises);\n      setImagePreviews(previews);\n      setIsSplit(true);\n    } catch (err) {\n      console.error('Error splitting image:', err);\n      setError('Failed to split image');\n    } finally {\n      setSplitLoading(false);\n    }\n  };\n  const handleSectionClick = (sectionIndex, e) => {\n    const rect = e.target.getBoundingClientRect();\n    const image = e.target;\n\n    // Get the actual rendered size of the image\n    const renderedWidth = image.width;\n    const renderedHeight = image.height;\n\n    // Calculate the scaling factor between rendered size and natural size\n    const scaleX = image.naturalWidth / renderedWidth;\n    const scaleY = image.naturalHeight / renderedHeight;\n\n    // Get click position relative to the rendered image\n    // Account for potential padding due to object-fit: contain\n    const imageAspect = image.naturalWidth / image.naturalHeight;\n    const containerAspect = renderedWidth / renderedHeight;\n    let x = e.clientX - rect.left;\n    let y = e.clientY - rect.top;\n\n    // Adjust coordinates if image is letterboxed due to object-fit: contain\n    if (imageAspect > containerAspect) {\n      // Image is wider than container - has vertical padding\n      const actualHeight = renderedWidth / imageAspect;\n      const padding = (renderedHeight - actualHeight) / 2;\n      y = y - padding;\n      // Clamp y to actual image bounds\n      y = Math.max(0, Math.min(y, actualHeight));\n    } else {\n      // Image is taller than container - has horizontal padding\n      const actualWidth = renderedHeight * imageAspect;\n      const padding = (renderedWidth - actualWidth) / 2;\n      x = x - padding;\n      // Clamp x to actual image bounds\n      x = Math.max(0, Math.min(x, actualWidth));\n    }\n\n    // Scale to original image coordinates\n    const originalX = Math.round(x * scaleX);\n    const originalY = Math.round(y * scaleY);\n\n    // Add the section offset\n    const sectionWidth = imageSize.width / 3;\n    const adjustedX = originalX + sectionIndex * sectionWidth;\n\n    // Clamp values to ensure they stay within the section bounds\n    const finalX = Math.max(sectionIndex * sectionWidth, Math.min(adjustedX, (sectionIndex + 1) * sectionWidth - 1));\n    const finalY = Math.max(0, Math.min(originalY, imageSize.height - 1));\n    const newFocalPoints = [...focalPoints];\n    newFocalPoints[sectionIndex] = {\n      x: finalX,\n      y: finalY\n    };\n    setFocalPoints(newFocalPoints);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // No more \"Confirm Focal Point\" check; we just create the wiggle if all points are set\n    if (focalPoints.some(fp => fp === null)) {\n      setError('Please set a focal point on each section before creating wiggle.');\n      return;\n    }\n    setError(null);\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('image', image);\n      formData.append('focalPoints', JSON.stringify(focalPoints));\n      const response = await fetch('http://localhost:5000/api/process_image', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to process image');\n      }\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'wiggle.mp4';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleBack = () => {\n    // Instead of stepping \"back\" through sections, return to full-image page\n    if (isSplit) {\n      setIsSplit(false);\n    } else if (image) {\n      // If we haven't split yet, go back to upload\n      setImage(null);\n      setFullImagePreview(null);\n      setImagePreviews([]);\n      setFocalPoints([null, null, null]);\n    }\n  };\n  function handleRotate90() {\n    if (!loadedImage) return;\n\n    // Create an offscreen canvas to draw the rotated image\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n\n    // The rotated image dimensions swap: width -> height, height -> width\n    canvas.width = loadedImage.height;\n    canvas.height = loadedImage.width;\n\n    // Move the origin to the center of the canvas, rotate 90 deg clockwise, then draw\n    ctx.translate(canvas.width / 2, canvas.height / 2);\n    ctx.rotate(Math.PI / 2);\n    // Draw the image so its center is at the canvas origin\n    ctx.drawImage(loadedImage, -loadedImage.width / 2, -loadedImage.height / 2);\n\n    // Convert canvas back to data URL and load it into an <img> so we can update loadedImage\n    const rotatedUrl = canvas.toDataURL('image/jpeg');\n    const rotatedImg = new Image();\n    rotatedImg.onload = () => {\n      // Update states for new (rotated) image\n      setLoadedImage(rotatedImg);\n      setFullImagePreview(rotatedImg.src);\n      // Also update imageSize so that focal points compute correctly\n      setImageSize({\n        width: rotatedImg.width,\n        height: rotatedImg.height\n      });\n    };\n    rotatedImg.src = rotatedUrl;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [(image || isSplit) && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-arrow\",\n      onClick: handleBack,\n      title: \"Go back\",\n      children: \"\\u2190\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"WiggleLens Image Processor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"upload-form\",\n      children: [!image && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"upload-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleImageUpload,\n            required: true,\n            className: \"upload-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), \"Upload Image (6000x4000)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), fullImagePreview && !isSplit && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"full-image-container\",\n        style: {\n          display: 'flex',\n          gap: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: fullImagePreview,\n          alt: \"Full uploaded image\",\n          className: \"full-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleRotate90,\n            style: {\n              marginBottom: '10px',\n              padding: '12px 30px',\n              backgroundColor: '#f39c12',\n              color: 'white',\n              border: 'none',\n              borderRadius: '8px',\n              fontSize: '1.1em',\n              cursor: 'pointer',\n              transition: 'background-color 0.3s'\n            },\n            children: \"Rotate 90 Degrees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleSplitImage,\n            className: \"split-button\",\n            disabled: splitLoading,\n            children: splitLoading ? 'Splitting...' : 'Split Image'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), isSplit && imagePreviews.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sections-container\",\n          children: imagePreviews.map((preview, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section-image-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: preview,\n                alt: `Section ${index + 1}`,\n                onClick: e => handleSectionClick(index, e),\n                className: \"section-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this), focalPoints[index] && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"focal-marker\",\n                style: {\n                  left: `${focalPoints[index].x % (imageSize.width / 3) / (imageSize.width / 3) * 100}%`,\n                  top: `${focalPoints[index].y / imageSize.height * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coordinates-text\",\n                children: `Focal point: (${Math.round(focalPoints[index].x - index * (imageSize.width / 3))}, ${Math.round(focalPoints[index].y)})`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"previews-title\",\n          children: \"Click on each section to set focal points:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), isSplit && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\"\n        // Only enable if all 3 focal points are set\n        ,\n        disabled: loading || focalPoints.some(fp => fp === null),\n        className: \"submit-button\",\n        children: loading ? 'Processing...' : 'Create Wiggle'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LpxRezYa2Aux3iVn/z/W11C+tc4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","image","setImage","fullImagePreview","setFullImagePreview","imagePreviews","setImagePreviews","imageSize","setImageSize","width","height","focalPoints","setFocalPoints","error","setError","loading","setLoading","isSplit","setIsSplit","loadedImage","setLoadedImage","splitLoading","setSplitLoading","autoDetectLoading","setAutoDetectLoading","handleImageUpload","e","file","target","files","img","Image","onload","value","src","onerror","URL","createObjectURL","handleSplitImage","sectionWidth","Math","floor","sectionPromises","map","i","canvas","OffscreenCanvas","ctx","getContext","drawImage","blob","convertToBlob","type","quality","previews","Promise","all","err","console","handleSectionClick","sectionIndex","rect","getBoundingClientRect","renderedWidth","renderedHeight","scaleX","naturalWidth","scaleY","naturalHeight","imageAspect","containerAspect","x","clientX","left","y","clientY","top","actualHeight","padding","max","min","actualWidth","originalX","round","originalY","adjustedX","finalX","finalY","newFocalPoints","handleSubmit","preventDefault","some","fp","formData","FormData","append","JSON","stringify","response","fetch","method","body","ok","errorData","json","Error","url","window","a","document","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","message","handleBack","handleRotate90","translate","rotate","PI","rotatedUrl","toDataURL","rotatedImg","className","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","accept","onChange","required","style","display","gap","alt","flexDirection","justifyContent","marginBottom","backgroundColor","color","border","borderRadius","fontSize","cursor","transition","disabled","length","preview","index","_c","$RefreshReg$"],"sources":["C:/Users/Leonidas/Desktop/Coding/DispoStudio/WiggleLens/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [image, setImage] = useState(null);\n  const [fullImagePreview, setFullImagePreview] = useState(null);\n  const [imagePreviews, setImagePreviews] = useState([]);\n  const [imageSize, setImageSize] = useState({ width: 0, height: 0 });\n  const [focalPoints, setFocalPoints] = useState([null, null, null]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [isSplit, setIsSplit] = useState(false);\n  const [loadedImage, setLoadedImage] = useState(null);\n  const [splitLoading, setSplitLoading] = useState(false);\n  const [autoDetectLoading, setAutoDetectLoading] = useState(false);\n\n  const handleImageUpload = async (e) => {\n    const file = e.target.files[0];\n    \n    // Create temporary image to check dimensions\n    const img = new Image();\n    img.onload = () => {\n      // Check for exact 6000x4000 dimensions\n      if (img.width !== 6000 || img.height !== 4000) {\n        setError('Please upload an image that is exactly 6000x4000 pixels');\n        // Reset file input\n        e.target.value = '';\n        return;\n      }\n\n      // If dimensions are correct, proceed with upload\n      setImage(file);\n      setFocalPoints([null, null, null]);\n      setIsSplit(false);\n      setError(null);  // Clear any previous errors\n      \n      setImageSize({ width: img.width, height: img.height });\n      setFullImagePreview(img.src);\n      setLoadedImage(img);\n    };\n\n    img.onerror = () => {\n      setError('Failed to load image');\n      e.target.value = '';\n    };\n\n    img.src = URL.createObjectURL(file);\n  };\n\n  const handleSplitImage = async () => {\n    // Reset focal points every time user re-splits the image.\n    setFocalPoints([null, null, null]);\n\n    setSplitLoading(true);\n    try {\n      const img = loadedImage;\n      const sectionWidth = Math.floor(img.width / 3);\n      \n      // Create sections in parallel\n      const sectionPromises = [0, 1, 2].map(async (i) => {\n        const canvas = new OffscreenCanvas(sectionWidth, img.height);\n        const ctx = canvas.getContext('2d');\n        \n        // Draw section\n        ctx.drawImage(\n          img,\n          i * sectionWidth, 0, sectionWidth, img.height,\n          0, 0, sectionWidth, img.height\n        );\n        \n        // Convert to blob and then to data URL\n        const blob = await canvas.convertToBlob({ type: 'image/jpeg', quality: 0.8 });\n        return URL.createObjectURL(blob);\n      });\n      \n      const previews = await Promise.all(sectionPromises);\n      setImagePreviews(previews);\n      setIsSplit(true);\n    } catch (err) {\n      console.error('Error splitting image:', err);\n      setError('Failed to split image');\n    } finally {\n      setSplitLoading(false);\n    }\n  };\n\n  const handleSectionClick = (sectionIndex, e) => {\n    const rect = e.target.getBoundingClientRect();\n    const image = e.target;\n    \n    // Get the actual rendered size of the image\n    const renderedWidth = image.width;\n    const renderedHeight = image.height;\n    \n    // Calculate the scaling factor between rendered size and natural size\n    const scaleX = image.naturalWidth / renderedWidth;\n    const scaleY = image.naturalHeight / renderedHeight;\n    \n    // Get click position relative to the rendered image\n    // Account for potential padding due to object-fit: contain\n    const imageAspect = image.naturalWidth / image.naturalHeight;\n    const containerAspect = renderedWidth / renderedHeight;\n    \n    let x = e.clientX - rect.left;\n    let y = e.clientY - rect.top;\n    \n    // Adjust coordinates if image is letterboxed due to object-fit: contain\n    if (imageAspect > containerAspect) {\n      // Image is wider than container - has vertical padding\n      const actualHeight = renderedWidth / imageAspect;\n      const padding = (renderedHeight - actualHeight) / 2;\n      y = y - padding;\n      // Clamp y to actual image bounds\n      y = Math.max(0, Math.min(y, actualHeight));\n    } else {\n      // Image is taller than container - has horizontal padding\n      const actualWidth = renderedHeight * imageAspect;\n      const padding = (renderedWidth - actualWidth) / 2;\n      x = x - padding;\n      // Clamp x to actual image bounds\n      x = Math.max(0, Math.min(x, actualWidth));\n    }\n    \n    // Scale to original image coordinates\n    const originalX = Math.round(x * scaleX);\n    const originalY = Math.round(y * scaleY);\n    \n    // Add the section offset\n    const sectionWidth = imageSize.width / 3;\n    const adjustedX = originalX + (sectionIndex * sectionWidth);\n    \n    // Clamp values to ensure they stay within the section bounds\n    const finalX = Math.max(\n      sectionIndex * sectionWidth,\n      Math.min(adjustedX, (sectionIndex + 1) * sectionWidth - 1)\n    );\n    const finalY = Math.max(0, Math.min(originalY, imageSize.height - 1));\n    \n    const newFocalPoints = [...focalPoints];\n    newFocalPoints[sectionIndex] = { x: finalX, y: finalY };\n    setFocalPoints(newFocalPoints);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // No more \"Confirm Focal Point\" check; we just create the wiggle if all points are set\n    if (focalPoints.some(fp => fp === null)) {\n      setError('Please set a focal point on each section before creating wiggle.');\n      return;\n    }\n\n    setError(null);\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('image', image);\n      formData.append('focalPoints', JSON.stringify(focalPoints));\n\n      const response = await fetch('http://localhost:5000/api/process_image', {\n        method: 'POST',\n        body: formData,\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to process image');\n      }\n\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'wiggle.mp4';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleBack = () => {\n    // Instead of stepping \"back\" through sections, return to full-image page\n    if (isSplit) {\n      setIsSplit(false);\n    } else if (image) {\n      // If we haven't split yet, go back to upload\n      setImage(null);\n      setFullImagePreview(null);\n      setImagePreviews([]);\n      setFocalPoints([null, null, null]);\n    }\n  };\n\n  function handleRotate90() {\n    if (!loadedImage) return;\n\n    // Create an offscreen canvas to draw the rotated image\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n\n    // The rotated image dimensions swap: width -> height, height -> width\n    canvas.width = loadedImage.height;\n    canvas.height = loadedImage.width;\n\n    // Move the origin to the center of the canvas, rotate 90 deg clockwise, then draw\n    ctx.translate(canvas.width / 2, canvas.height / 2);\n    ctx.rotate(Math.PI / 2); \n    // Draw the image so its center is at the canvas origin\n    ctx.drawImage(\n      loadedImage, \n      -loadedImage.width / 2, \n      -loadedImage.height / 2\n    );\n\n    // Convert canvas back to data URL and load it into an <img> so we can update loadedImage\n    const rotatedUrl = canvas.toDataURL('image/jpeg');\n    const rotatedImg = new Image();\n    rotatedImg.onload = () => {\n      // Update states for new (rotated) image\n      setLoadedImage(rotatedImg);\n      setFullImagePreview(rotatedImg.src);\n      // Also update imageSize so that focal points compute correctly\n      setImageSize({ width: rotatedImg.width, height: rotatedImg.height });\n    };\n    rotatedImg.src = rotatedUrl;\n  }\n\n  return (\n    <div className=\"container\">\n      {(image || isSplit) && (\n        <button \n          className=\"back-arrow\" \n          onClick={handleBack}\n          title=\"Go back\"\n        >\n          ←\n        </button>\n      )}\n\n      <h1 className=\"title\">WiggleLens Image Processor</h1>\n      \n      <form onSubmit={handleSubmit} className=\"upload-form\">\n        {!image && (\n          <div className=\"upload-container\">\n            <label className=\"upload-label\">\n              <input \n                type=\"file\" \n                accept=\"image/*\" \n                onChange={handleImageUpload}\n                required \n                className=\"upload-input\"\n              />\n              Upload Image (6000x4000)\n            </label>\n          </div>\n        )}\n\n        {fullImagePreview && !isSplit && (\n          <div className=\"full-image-container\" style={{ display: 'flex', gap: '20px' }}>\n            <img \n              src={fullImagePreview} \n              alt=\"Full uploaded image\" \n              className=\"full-image\"\n            />\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n              <button \n                type=\"button\"\n                onClick={handleRotate90}\n                style={{\n                  marginBottom: '10px',\n                  padding: '12px 30px',\n                  backgroundColor: '#f39c12',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '8px',\n                  fontSize: '1.1em',\n                  cursor: 'pointer',\n                  transition: 'background-color 0.3s',\n                }}\n              >\n                Rotate 90 Degrees\n              </button>\n\n              <button \n                type=\"button\" \n                onClick={handleSplitImage}\n                className=\"split-button\"\n                disabled={splitLoading}\n              >\n                {splitLoading ? 'Splitting...' : 'Split Image'}\n              </button>\n            </div>\n      </div>\n        )}\n\n        {isSplit && imagePreviews.length > 0 && (\n          <>\n            <div className=\"sections-container\">\n              {imagePreviews.map((preview, index) => (\n                <div key={index} className=\"section-card\">\n                  <div\n                    className=\"section-image-container\"\n                  >\n                    <img\n                      src={preview}\n                      alt={`Section ${index + 1}`}\n                      onClick={(e) => handleSectionClick(index, e)}\n                      className=\"section-image\"\n                    />\n                  </div>\n\n                  {focalPoints[index] && (\n                    <>\n                      <div\n                        className=\"focal-marker\"\n                        style={{\n                          left: `${((focalPoints[index].x % (imageSize.width / 3)) / (imageSize.width / 3)) * 100}%`,\n                          top: `${(focalPoints[index].y / imageSize.height) * 100}%`,\n                        }}\n                      />\n                      <div className=\"coordinates-text\">\n                        {`Focal point: (${Math.round(focalPoints[index].x - index * (imageSize.width / 3))}, ${Math.round(focalPoints[index].y)})`}\n                      </div>\n                    </>\n                  )}\n                </div>\n              ))}\n            </div>\n            <h3 className=\"previews-title\">Click on each section to set focal points:</h3>\n          </>\n        )}\n\n        {isSplit && (\n          <button \n            type=\"submit\"\n            // Only enable if all 3 focal points are set\n            disabled={\n              loading || focalPoints.some(fp => fp === null)\n            }\n            className=\"submit-button\"\n          >\n            {loading ? 'Processing...' : 'Create Wiggle'}\n          </button>\n        )}\n      </form>\n\n      {error && (\n        <div className=\"error-message\">\n          Error: {error}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}