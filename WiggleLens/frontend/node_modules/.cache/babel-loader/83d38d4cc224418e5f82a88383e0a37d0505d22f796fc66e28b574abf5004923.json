{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leonidas\\\\Desktop\\\\Coding\\\\DispoStudio\\\\WiggleLens\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [fullImagePreview, setFullImagePreview] = useState(null);\n  const [imagePreviews, setImagePreviews] = useState([]);\n  const [imageSize, setImageSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const [focalPoints, setFocalPoints] = useState([null, null, null]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [isSplit, setIsSplit] = useState(false);\n  const [loadedImage, setLoadedImage] = useState(null);\n  const [splitLoading, setSplitLoading] = useState(false);\n  const [autoDetectLoading, setAutoDetectLoading] = useState(false);\n  const [isHovering, setIsHovering] = useState([false, false, false]);\n  const [zoomOrigins, setZoomOrigins] = useState([{\n    x: 50,\n    y: 50\n  }, {\n    x: 50,\n    y: 50\n  }, {\n    x: 50,\n    y: 50\n  }]);\n  const handleImageUpload = async e => {\n    const file = e.target.files[0];\n\n    // Create temporary image to check dimensions\n    const img = new Image();\n    img.onload = () => {\n      // Check for exact 6000x4000 dimensions\n      if (img.width !== 6000 || img.height !== 4000) {\n        setError('Please upload an image that is exactly 6000x4000 pixels');\n        // Reset file input\n        e.target.value = '';\n        return;\n      }\n\n      // If dimensions are correct, proceed with upload\n      setImage(file);\n      setFocalPoints([null, null, null]);\n      setIsSplit(false);\n      setError(null); // Clear any previous errors\n\n      setImageSize({\n        width: img.width,\n        height: img.height\n      });\n      setFullImagePreview(img.src);\n      setLoadedImage(img);\n    };\n    img.onerror = () => {\n      setError('Failed to load image');\n      e.target.value = '';\n    };\n    img.src = URL.createObjectURL(file);\n  };\n  const handleSplitImage = async () => {\n    // Reset focal points every time user re-splits the image.\n    setFocalPoints([null, null, null]);\n    setSplitLoading(true);\n    try {\n      const img = loadedImage;\n      const sectionWidth = Math.floor(img.width / 3);\n\n      // Create sections in parallel\n      const sectionPromises = [0, 1, 2].map(async i => {\n        const canvas = new OffscreenCanvas(sectionWidth, img.height);\n        const ctx = canvas.getContext('2d');\n\n        // Draw section\n        ctx.drawImage(img, i * sectionWidth, 0, sectionWidth, img.height, 0, 0, sectionWidth, img.height);\n\n        // Convert to blob and then to data URL\n        const blob = await canvas.convertToBlob({\n          type: 'image/jpeg',\n          quality: 0.8\n        });\n        return URL.createObjectURL(blob);\n      });\n      const previews = await Promise.all(sectionPromises);\n      setImagePreviews(previews);\n      setIsSplit(true);\n    } catch (err) {\n      console.error('Error splitting image:', err);\n      setError('Failed to split image');\n    } finally {\n      setSplitLoading(false);\n    }\n  };\n  const handleMouseEnter = sectionIndex => {\n    const newHovers = [...isHovering];\n    newHovers[sectionIndex] = true;\n    setIsHovering(newHovers);\n  };\n  const handleMouseLeave = sectionIndex => {\n    const newHovers = [...isHovering];\n    newHovers[sectionIndex] = false;\n    setIsHovering(newHovers);\n  };\n  const handleMouseMove = (sectionIndex, e) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const originX = x / rect.width * 100;\n    const originY = y / rect.height * 100;\n    setZoomOrigins(prev => {\n      const updated = [...prev];\n      updated[sectionIndex] = {\n        x: originX,\n        y: originY\n      };\n      return updated;\n    });\n  };\n  const handleSectionClick = (sectionIndex, e) => {\n    const rect = e.target.getBoundingClientRect();\n    const image = e.target;\n\n    // Get the actual rendered size of the image\n    const renderedWidth = image.width;\n    const renderedHeight = image.height;\n\n    // Calculate the scaling factor between rendered size and natural size\n    const scaleX = image.naturalWidth / renderedWidth;\n    const scaleY = image.naturalHeight / renderedHeight;\n\n    // Get click position relative to the rendered image\n    // Account for potential padding due to object-fit: contain\n    const imageAspect = image.naturalWidth / image.naturalHeight;\n    const containerAspect = renderedWidth / renderedHeight;\n    let x = e.clientX - rect.left;\n    let y = e.clientY - rect.top;\n\n    // Adjust coordinates if image is letterboxed due to object-fit: contain\n    if (imageAspect > containerAspect) {\n      // Image is wider than container - has vertical padding\n      const actualHeight = renderedWidth / imageAspect;\n      const padding = (renderedHeight - actualHeight) / 2;\n      y = y - padding;\n      // Clamp y to actual image bounds\n      y = Math.max(0, Math.min(y, actualHeight));\n    } else {\n      // Image is taller than container - has horizontal padding\n      const actualWidth = renderedHeight * imageAspect;\n      const padding = (renderedWidth - actualWidth) / 2;\n      x = x - padding;\n      // Clamp x to actual image bounds\n      x = Math.max(0, Math.min(x, actualWidth));\n    }\n\n    // Scale to original image coordinates\n    const originalX = Math.round(x * scaleX);\n    const originalY = Math.round(y * scaleY);\n\n    // Add the section offset\n    const sectionWidth = imageSize.width / 3;\n    const adjustedX = originalX + sectionIndex * sectionWidth;\n\n    // Clamp values to ensure they stay within the section bounds\n    const finalX = Math.max(sectionIndex * sectionWidth, Math.min(adjustedX, (sectionIndex + 1) * sectionWidth - 1));\n    const finalY = Math.max(0, Math.min(originalY, imageSize.height - 1));\n    const newFocalPoints = [...focalPoints];\n    newFocalPoints[sectionIndex] = {\n      x: finalX,\n      y: finalY\n    };\n    setFocalPoints(newFocalPoints);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // No more \"Confirm Focal Point\" check; we just create the wiggle if all points are set\n    if (focalPoints.some(fp => fp === null)) {\n      setError('Please set a focal point on each section before creating wiggle.');\n      return;\n    }\n    setError(null);\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('image', image);\n      formData.append('focalPoints', JSON.stringify(focalPoints));\n      const response = await fetch('http://localhost:5000/api/process_image', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to process image');\n      }\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'wiggle.mp4';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleBack = () => {\n    // Instead of stepping \"back\" through sections, return to full-image page\n    if (isSplit) {\n      setIsSplit(false);\n    } else if (image) {\n      // If we haven't split yet, go back to upload\n      setImage(null);\n      setFullImagePreview(null);\n      setImagePreviews([]);\n      setFocalPoints([null, null, null]);\n    }\n  };\n  function handleRotate90() {\n    if (!loadedImage) return;\n\n    // Create an offscreen canvas to draw the rotated image\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n\n    // The rotated image dimensions swap: width -> height, height -> width\n    canvas.width = loadedImage.height;\n    canvas.height = loadedImage.width;\n\n    // Move the origin to the center of the canvas, rotate 90 deg clockwise, then draw\n    ctx.translate(canvas.width / 2, canvas.height / 2);\n    ctx.rotate(Math.PI / 2);\n    // Draw the image so its center is at the canvas origin\n    ctx.drawImage(loadedImage, -loadedImage.width / 2, -loadedImage.height / 2);\n\n    // Convert canvas back to data URL and load it into an <img> so we can update loadedImage\n    const rotatedUrl = canvas.toDataURL('image/jpeg');\n    const rotatedImg = new Image();\n    rotatedImg.onload = () => {\n      // Update states for new (rotated) image\n      setLoadedImage(rotatedImg);\n      setFullImagePreview(rotatedImg.src);\n      // Also update imageSize so that focal points compute correctly\n      setImageSize({\n        width: rotatedImg.width,\n        height: rotatedImg.height\n      });\n    };\n    rotatedImg.src = rotatedUrl;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [(image || isSplit) && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-arrow\",\n      onClick: handleBack,\n      title: \"Go back\",\n      children: \"\\u2190\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"WiggleLens Image Processor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"upload-form\",\n      children: [!image && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"upload-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleImageUpload,\n            required: true,\n            className: \"upload-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), \"Upload Image (6000x4000)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), fullImagePreview && !isSplit && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"full-image-container\",\n        style: {\n          display: 'flex',\n          gap: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: fullImagePreview,\n          alt: \"Full uploaded image\",\n          className: \"full-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleRotate90,\n            style: {\n              marginBottom: '10px',\n              padding: '12px 30px',\n              backgroundColor: '#f39c12',\n              color: 'white',\n              border: 'none',\n              borderRadius: '8px',\n              fontSize: '1.1em',\n              cursor: 'pointer',\n              transition: 'background-color 0.3s'\n            },\n            children: \"Rotate 90 Degrees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleSplitImage,\n            className: \"split-button\",\n            disabled: splitLoading,\n            children: splitLoading ? 'Splitting...' : 'Split Image'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this), isSplit && imagePreviews.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sections-container\",\n          children: imagePreviews.map((preview, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"section-title\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section-image-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: preview,\n                alt: `Section ${index + 1}`,\n                onClick: e => handleSectionClick(index, e),\n                onMouseEnter: () => handleMouseEnter(index),\n                onMouseLeave: () => handleMouseLeave(index),\n                onMouseMove: e => handleMouseMove(index, e),\n                className: \"section-image\",\n                style: {\n                  transform: isHovering[index] ? 'scale(2)' : 'scale(1)',\n                  transformOrigin: `${zoomOrigins[index].x}% ${zoomOrigins[index].y}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this), focalPoints[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"focal-point\",\n                style: {\n                  left: `${focalPoints[index].x % (imageSize.width / 3) / (imageSize.width / 3) * 100}%`,\n                  top: `${focalPoints[index].y / imageSize.height * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 19\n            }, this), focalPoints[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coordinates-text\",\n              children: `Focal point: (${Math.round(focalPoints[index].x - index * (imageSize.width / 3))}, ${Math.round(focalPoints[index].y)})`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"previews-title\",\n          children: \"Click on each section to set focal points:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), isSplit && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\"\n        // Only enable if all 3 focal points are set\n        ,\n        disabled: loading || focalPoints.some(fp => fp === null),\n        className: \"submit-button\",\n        children: loading ? 'Processing...' : 'Create Wiggle'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GKGVupUkbNfR+IabXx9JTxZHcPg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","image","setImage","fullImagePreview","setFullImagePreview","imagePreviews","setImagePreviews","imageSize","setImageSize","width","height","focalPoints","setFocalPoints","error","setError","loading","setLoading","isSplit","setIsSplit","loadedImage","setLoadedImage","splitLoading","setSplitLoading","autoDetectLoading","setAutoDetectLoading","isHovering","setIsHovering","zoomOrigins","setZoomOrigins","x","y","handleImageUpload","e","file","target","files","img","Image","onload","value","src","onerror","URL","createObjectURL","handleSplitImage","sectionWidth","Math","floor","sectionPromises","map","i","canvas","OffscreenCanvas","ctx","getContext","drawImage","blob","convertToBlob","type","quality","previews","Promise","all","err","console","handleMouseEnter","sectionIndex","newHovers","handleMouseLeave","handleMouseMove","rect","currentTarget","getBoundingClientRect","clientX","left","clientY","top","originX","originY","prev","updated","handleSectionClick","renderedWidth","renderedHeight","scaleX","naturalWidth","scaleY","naturalHeight","imageAspect","containerAspect","actualHeight","padding","max","min","actualWidth","originalX","round","originalY","adjustedX","finalX","finalY","newFocalPoints","handleSubmit","preventDefault","some","fp","formData","FormData","append","JSON","stringify","response","fetch","method","body","ok","errorData","json","Error","url","window","a","document","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","message","handleBack","handleRotate90","translate","rotate","PI","rotatedUrl","toDataURL","rotatedImg","className","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","accept","onChange","required","style","display","gap","alt","flexDirection","justifyContent","marginBottom","backgroundColor","color","border","borderRadius","fontSize","cursor","transition","disabled","length","preview","index","onMouseEnter","onMouseLeave","onMouseMove","transform","transformOrigin","_c","$RefreshReg$"],"sources":["C:/Users/Leonidas/Desktop/Coding/DispoStudio/WiggleLens/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [image, setImage] = useState(null);\r\n  const [fullImagePreview, setFullImagePreview] = useState(null);\r\n  const [imagePreviews, setImagePreviews] = useState([]);\r\n  const [imageSize, setImageSize] = useState({ width: 0, height: 0 });\r\n  const [focalPoints, setFocalPoints] = useState([null, null, null]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [isSplit, setIsSplit] = useState(false);\r\n  const [loadedImage, setLoadedImage] = useState(null);\r\n  const [splitLoading, setSplitLoading] = useState(false);\r\n  const [autoDetectLoading, setAutoDetectLoading] = useState(false);\r\n  const [isHovering, setIsHovering] = useState([false, false, false]);\r\n  const [zoomOrigins, setZoomOrigins] = useState([\r\n    { x: 50, y: 50 },\r\n    { x: 50, y: 50 },\r\n    { x: 50, y: 50 },\r\n  ]);\r\n\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    \r\n    // Create temporary image to check dimensions\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      // Check for exact 6000x4000 dimensions\r\n      if (img.width !== 6000 || img.height !== 4000) {\r\n        setError('Please upload an image that is exactly 6000x4000 pixels');\r\n        // Reset file input\r\n        e.target.value = '';\r\n        return;\r\n      }\r\n\r\n      // If dimensions are correct, proceed with upload\r\n      setImage(file);\r\n      setFocalPoints([null, null, null]);\r\n      setIsSplit(false);\r\n      setError(null);  // Clear any previous errors\r\n      \r\n      setImageSize({ width: img.width, height: img.height });\r\n      setFullImagePreview(img.src);\r\n      setLoadedImage(img);\r\n    };\r\n\r\n    img.onerror = () => {\r\n      setError('Failed to load image');\r\n      e.target.value = '';\r\n    };\r\n\r\n    img.src = URL.createObjectURL(file);\r\n  };\r\n\r\n  const handleSplitImage = async () => {\r\n    // Reset focal points every time user re-splits the image.\r\n    setFocalPoints([null, null, null]);\r\n\r\n    setSplitLoading(true);\r\n    try {\r\n      const img = loadedImage;\r\n      const sectionWidth = Math.floor(img.width / 3);\r\n      \r\n      // Create sections in parallel\r\n      const sectionPromises = [0, 1, 2].map(async (i) => {\r\n        const canvas = new OffscreenCanvas(sectionWidth, img.height);\r\n        const ctx = canvas.getContext('2d');\r\n        \r\n        // Draw section\r\n        ctx.drawImage(\r\n          img,\r\n          i * sectionWidth, 0, sectionWidth, img.height,\r\n          0, 0, sectionWidth, img.height\r\n        );\r\n        \r\n        // Convert to blob and then to data URL\r\n        const blob = await canvas.convertToBlob({ type: 'image/jpeg', quality: 0.8 });\r\n        return URL.createObjectURL(blob);\r\n      });\r\n      \r\n      const previews = await Promise.all(sectionPromises);\r\n      setImagePreviews(previews);\r\n      setIsSplit(true);\r\n    } catch (err) {\r\n      console.error('Error splitting image:', err);\r\n      setError('Failed to split image');\r\n    } finally {\r\n      setSplitLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleMouseEnter = (sectionIndex) => {\r\n    const newHovers = [...isHovering];\r\n    newHovers[sectionIndex] = true;\r\n    setIsHovering(newHovers);\r\n  };\r\n\r\n  const handleMouseLeave = (sectionIndex) => {\r\n    const newHovers = [...isHovering];\r\n    newHovers[sectionIndex] = false;\r\n    setIsHovering(newHovers);\r\n  };\r\n\r\n  const handleMouseMove = (sectionIndex, e) => {\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n\r\n    const originX = (x / rect.width) * 100;\r\n    const originY = (y / rect.height) * 100;\r\n\r\n    setZoomOrigins((prev) => {\r\n      const updated = [...prev];\r\n      updated[sectionIndex] = { x: originX, y: originY };\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const handleSectionClick = (sectionIndex, e) => {\r\n    const rect = e.target.getBoundingClientRect();\r\n    const image = e.target;\r\n    \r\n    // Get the actual rendered size of the image\r\n    const renderedWidth = image.width;\r\n    const renderedHeight = image.height;\r\n    \r\n    // Calculate the scaling factor between rendered size and natural size\r\n    const scaleX = image.naturalWidth / renderedWidth;\r\n    const scaleY = image.naturalHeight / renderedHeight;\r\n    \r\n    // Get click position relative to the rendered image\r\n    // Account for potential padding due to object-fit: contain\r\n    const imageAspect = image.naturalWidth / image.naturalHeight;\r\n    const containerAspect = renderedWidth / renderedHeight;\r\n    \r\n    let x = e.clientX - rect.left;\r\n    let y = e.clientY - rect.top;\r\n    \r\n    // Adjust coordinates if image is letterboxed due to object-fit: contain\r\n    if (imageAspect > containerAspect) {\r\n      // Image is wider than container - has vertical padding\r\n      const actualHeight = renderedWidth / imageAspect;\r\n      const padding = (renderedHeight - actualHeight) / 2;\r\n      y = y - padding;\r\n      // Clamp y to actual image bounds\r\n      y = Math.max(0, Math.min(y, actualHeight));\r\n    } else {\r\n      // Image is taller than container - has horizontal padding\r\n      const actualWidth = renderedHeight * imageAspect;\r\n      const padding = (renderedWidth - actualWidth) / 2;\r\n      x = x - padding;\r\n      // Clamp x to actual image bounds\r\n      x = Math.max(0, Math.min(x, actualWidth));\r\n    }\r\n    \r\n    // Scale to original image coordinates\r\n    const originalX = Math.round(x * scaleX);\r\n    const originalY = Math.round(y * scaleY);\r\n    \r\n    // Add the section offset\r\n    const sectionWidth = imageSize.width / 3;\r\n    const adjustedX = originalX + (sectionIndex * sectionWidth);\r\n    \r\n    // Clamp values to ensure they stay within the section bounds\r\n    const finalX = Math.max(\r\n      sectionIndex * sectionWidth,\r\n      Math.min(adjustedX, (sectionIndex + 1) * sectionWidth - 1)\r\n    );\r\n    const finalY = Math.max(0, Math.min(originalY, imageSize.height - 1));\r\n    \r\n    const newFocalPoints = [...focalPoints];\r\n    newFocalPoints[sectionIndex] = { x: finalX, y: finalY };\r\n    setFocalPoints(newFocalPoints);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // No more \"Confirm Focal Point\" check; we just create the wiggle if all points are set\r\n    if (focalPoints.some(fp => fp === null)) {\r\n      setError('Please set a focal point on each section before creating wiggle.');\r\n      return;\r\n    }\r\n\r\n    setError(null);\r\n    setLoading(true);\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('image', image);\r\n      formData.append('focalPoints', JSON.stringify(focalPoints));\r\n\r\n      const response = await fetch('http://localhost:5000/api/process_image', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to process image');\r\n      }\r\n\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = 'wiggle.mp4';\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      window.URL.revokeObjectURL(url);\r\n\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    // Instead of stepping \"back\" through sections, return to full-image page\r\n    if (isSplit) {\r\n      setIsSplit(false);\r\n    } else if (image) {\r\n      // If we haven't split yet, go back to upload\r\n      setImage(null);\r\n      setFullImagePreview(null);\r\n      setImagePreviews([]);\r\n      setFocalPoints([null, null, null]);\r\n    }\r\n  };\r\n\r\n  function handleRotate90() {\r\n    if (!loadedImage) return;\r\n\r\n    // Create an offscreen canvas to draw the rotated image\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    // The rotated image dimensions swap: width -> height, height -> width\r\n    canvas.width = loadedImage.height;\r\n    canvas.height = loadedImage.width;\r\n\r\n    // Move the origin to the center of the canvas, rotate 90 deg clockwise, then draw\r\n    ctx.translate(canvas.width / 2, canvas.height / 2);\r\n    ctx.rotate(Math.PI / 2); \r\n    // Draw the image so its center is at the canvas origin\r\n    ctx.drawImage(\r\n      loadedImage, \r\n      -loadedImage.width / 2, \r\n      -loadedImage.height / 2\r\n    );\r\n\r\n    // Convert canvas back to data URL and load it into an <img> so we can update loadedImage\r\n    const rotatedUrl = canvas.toDataURL('image/jpeg');\r\n    const rotatedImg = new Image();\r\n    rotatedImg.onload = () => {\r\n      // Update states for new (rotated) image\r\n      setLoadedImage(rotatedImg);\r\n      setFullImagePreview(rotatedImg.src);\r\n      // Also update imageSize so that focal points compute correctly\r\n      setImageSize({ width: rotatedImg.width, height: rotatedImg.height });\r\n    };\r\n    rotatedImg.src = rotatedUrl;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {(image || isSplit) && (\r\n        <button \r\n          className=\"back-arrow\" \r\n          onClick={handleBack}\r\n          title=\"Go back\"\r\n        >\r\n          ←\r\n        </button>\r\n      )}\r\n\r\n      <h1 className=\"title\">WiggleLens Image Processor</h1>\r\n      \r\n      <form onSubmit={handleSubmit} className=\"upload-form\">\r\n        {!image && (\r\n          <div className=\"upload-container\">\r\n            <label className=\"upload-label\">\r\n              <input \r\n                type=\"file\" \r\n                accept=\"image/*\" \r\n                onChange={handleImageUpload}\r\n                required \r\n                className=\"upload-input\"\r\n              />\r\n              Upload Image (6000x4000)\r\n            </label>\r\n          </div>\r\n        )}\r\n\r\n        {fullImagePreview && !isSplit && (\r\n          <div className=\"full-image-container\" style={{ display: 'flex', gap: '20px' }}>\r\n            <img \r\n              src={fullImagePreview} \r\n              alt=\"Full uploaded image\" \r\n              className=\"full-image\"\r\n            />\r\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n              <button \r\n                type=\"button\"\r\n                onClick={handleRotate90}\r\n                style={{\r\n                  marginBottom: '10px',\r\n                  padding: '12px 30px',\r\n                  backgroundColor: '#f39c12',\r\n                  color: 'white',\r\n                  border: 'none',\r\n                  borderRadius: '8px',\r\n                  fontSize: '1.1em',\r\n                  cursor: 'pointer',\r\n                  transition: 'background-color 0.3s',\r\n                }}\r\n              >\r\n                Rotate 90 Degrees\r\n              </button>\r\n\r\n              <button \r\n                type=\"button\" \r\n                onClick={handleSplitImage}\r\n                className=\"split-button\"\r\n                disabled={splitLoading}\r\n              >\r\n                {splitLoading ? 'Splitting...' : 'Split Image'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {isSplit && imagePreviews.length > 0 && (\r\n          <>\r\n            <div className=\"sections-container\">\r\n              {imagePreviews.map((preview, index) => (\r\n                <div key={index} className=\"section-card\">\r\n                  <h4 className=\"section-title\">{index + 1}</h4>\r\n                  <div className=\"section-image-container\">\r\n                    <img\r\n                      src={preview}\r\n                      alt={`Section ${index + 1}`}\r\n                      onClick={(e) => handleSectionClick(index, e)}\r\n                      onMouseEnter={() => handleMouseEnter(index)}\r\n                      onMouseLeave={() => handleMouseLeave(index)}\r\n                      onMouseMove={(e) => handleMouseMove(index, e)}\r\n                      className=\"section-image\"\r\n                      style={{\r\n                        transform: isHovering[index] ? 'scale(2)' : 'scale(1)',\r\n                        transformOrigin: `${zoomOrigins[index].x}% ${zoomOrigins[index].y}%`\r\n                      }}\r\n                    />\r\n                    {focalPoints[index] && (\r\n                      <div \r\n                        className=\"focal-point\"\r\n                        style={{\r\n                          left: `${((focalPoints[index].x % (imageSize.width / 3)) / (imageSize.width / 3)) * 100}%`,\r\n                          top: `${(focalPoints[index].y / imageSize.height) * 100}%`,\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  {focalPoints[index] && (\r\n                    <div className=\"coordinates-text\">\r\n                      {`Focal point: (${Math.round(focalPoints[index].x - (index * (imageSize.width / 3)))}, ${Math.round(focalPoints[index].y)})`}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <h3 className=\"previews-title\">Click on each section to set focal points:</h3>\r\n          </>\r\n        )}\r\n\r\n        {isSplit && (\r\n          <button \r\n            type=\"submit\"\r\n            // Only enable if all 3 focal points are set\r\n            disabled={\r\n              loading || focalPoints.some(fp => fp === null)\r\n            }\r\n            className=\"submit-button\"\r\n          >\r\n            {loading ? 'Processing...' : 'Create Wiggle'}\r\n          </button>\r\n        )}\r\n      </form>\r\n\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          Error: {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}